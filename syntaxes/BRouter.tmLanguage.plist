<?xml  version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN"   "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0" >
<!-- Generated via Iro -->
<dict>
  <key>fileTypes</key>
  <array> 
    <string>brf</string>
   </array>
  <key>name</key>
  <string>BRouter</string>
  <key>patterns</key>
  <array> 
    <dict>
      <key>include</key>
      <string>#main</string>
    </dict>
   </array>
  <key>scopeName</key>
  <string>source.BRouter</string>
  <key>uuid</key>
  <string></string>
  <key>repository</key>
  <dict>
    <key>main</key>
    <dict>
      <key>patterns</key>
      <array> 
        <dict>
          <key>match</key>
          <string>\b(assign|if|then|else)\b</string>
          <key>name</key>
          <string>keyword.BRouter</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\b(true|false|TRUE|FALSE|yes|no)\b</string>
          <key>name</key>
          <string>constant.language.BRouter</string>
        </dict>
        <dict>
          <key>match</key>
          <string>(---context:global|---context:way|---context:node)</string>
          <key>name</key>
          <string>entity.name.section.BRouter</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\b(downhillcost|downhillcutoff|uphillcost|uphillcutoff|elevationpenaltybuffer|elevationmaxbuffer|elevationbufferreduce)\b</string>
          <key>name</key>
          <string>keyword.control.BRouter</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\b(validForBikes|validForFoot|validForCars)\b</string>
          <key>name</key>
          <string>keyword.control.BRouter</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\b(pass1coefficient|pass2coefficient)\b</string>
          <key>name</key>
          <string>keyword.control.BRouter</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\b(turncost|initialcost|costfactor|uphillcostfactor|downhillcostfactor|nodeaccessgranted|initialclassifier)\b</string>
          <key>name</key>
          <string>keyword.control.BRouter</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\b(ignore_cycleroutes|totalMass|maxSpeed|S_C_x|C_r|bikerPower|ignore_bicycle_no|consider_smoothness_tags|low_memory_cutoff|lmc|lcn|considerTurnRestrictions)\b</string>
          <key>name</key>
          <string>keyword.control.BRouter</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\b(turnInstructionMode|turnInstructionCatchingRange|turnInstructionRoundabouts)\b</string>
          <key>name</key>
          <string>keyword.control.BRouter</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\b(not|or|and|xor|multiply|add|sub|max|min|equal|greater|lesser|switch)\b</string>
          <key>name</key>
          <string>keyword.operator.BRouter</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\b(maxspeed_forward|maxspeed_backward)\b</string>
          <key>name</key>
          <string>keyword.control.BRouter</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\b(maxspeed:forward|maxspeed:backward|maxspeed)\b</string>
          <key>name</key>
          <string>keyword.other.BRouter</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\b(route|highway|railway|cycleway|footway|bicycle)\b</string>
          <key>name</key>
          <string>keyword.other.BRouter</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\b(surface|smoothness|tracktype)\b</string>
          <key>name</key>
          <string>keyword.other.BRouter</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\b(motorway|motorway_link|ferry|steps|trunk|trunk_link|primary|primary_link|secondary|secondary_link|tertiary|tertiary_link|unclassified|residential|service|track|grade1|grade2|grade3|grade4|grade5|living_street|designated|private|dismount|opposite|opposite_lane|opposite_track|urban|rural|path|road|pedestrian|bridleway|traffic_signals|crossing|level_crossing|stop|proposed|abandoned|tram|rail|asphalt|paved|plates|lanes|concrete|paving_stones|wood|metal|cobblestone|fine_gravel|compacted|sett|grass_paver|gravel|sand|pebblestone|ground|grass|unpaved|dirt|earth|mud|clay|excellent|good|very_good|intermediate|medium|rough|poor|robust_wheels|bad|high_clearance|off_road_wheels|very_bad|horrible|very_horrible|impassable|embedded_rails|concrete)\b</string>
          <key>name</key>
          <string>string.BRouter</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\b(isbadoneway|isgoodoneway|isroundabout|islinktype|isgoodforcars|priorityclassifier|classifiermask|concrete|tracktype|bicycle)\b</string>
          <key>name</key>
          <string>keyword.control.BRouter</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\b(oneway|defaultaccess|bikeaccess|any_cycleroute|route_bicycle_icn|route_bicycle_ncn|route_bicycle_rcn|route_bicycle_lcn|junction|roundabout|access|motorroad|footaccess|foot|vehicle|reversedirection)\b</string>
          <key>name</key>
          <string>keyword.control.BRouter</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\b(accesspenalty|onewaypenalty|downspeedpenalty|flatspeedpenalty|upspeedpenalty|surfacepenalty|smoothnesspenalty)\b</string>
          <key>name</key>
          <string>variable.parameter.BRouter</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#numeric</string>
        </dict>
        <dict>
          <key>match</key>
          <string>(=|\||\(|\))</string>
          <key>name</key>
          <string>keyword.operator.BRouter</string>
        </dict>
        <dict>
          <key>match</key>
          <string>(#.*)</string>
          <key>name</key>
          <string>comment.BRouter</string>
        </dict>
        <dict>
          <key>match</key>
          <string>([^\s])</string>
          <key>name</key>
          <string>variable.other.BRouter</string>
        </dict>
       </array>
    </dict>
    <key>numeric</key>
    <dict>
      <key>patterns</key>
      <array> 
        <dict>
          <key>match</key>
          <string>([\x{002b}-]?([0-9]*[.])?[0-9]+)</string>
          <key>name</key>
          <string>constant.numeric.BRouter</string>
        </dict>
       </array>
    </dict>
  </dict>
</dict>
</plist>
